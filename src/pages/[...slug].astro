---
import { useStoryblokApi } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import TwoColumnBlock from '@components/TwoColumnBlock.astro';

// Step 1: Generate static paths for all Storyblok pages
export async function getStaticPaths() {
    const storyblokApi = useStoryblokApi()

    // Fetch all links (pages) from Storyblok
    // Includes unpublished pages for development
    const { data } = await storyblokApi.get('cdn/links', {
      version: import.meta.env.DEV ? 'draft' : 'published',
    })
    
    // Storyblok returns links as an object keyed by UUID â€”
    // we convert it to an array so we can map over it and generate static paths.
    const links = Object.values(data.links) as { slug: string }[];
    
    return links.map((link) => {
        return {
            params: {
                slug: link.slug === 'home' ? undefined : link.slug,
            },
        }
    })
}

// Step 2: Get the current slug from the URL
const { slug } = Astro.params

// Step 3: Fetch the corresponding Storyblok story
const storyblokApi = useStoryblokApi()

const { data } = await storyblokApi.get(
`cdn/stories/${slug === undefined ? 'home' : slug}`,
{
    version: import.meta.env.DEV ? 'draft' : 'published',
}
)

const story = data.story

---

<BaseLayout story={story}>
  <StoryblokComponent blok={story.content} />
<TwoColumnBlock />
</BaseLayout>
